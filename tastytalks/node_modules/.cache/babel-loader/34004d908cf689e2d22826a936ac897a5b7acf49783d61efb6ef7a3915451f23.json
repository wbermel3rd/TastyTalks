{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\n// import { useStore } from 'vuex'\nimport { db, auth } from '../firebase';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport router from '@/router';\nexport default {\n  name: 'User-Register',\n  components: {},\n  methods: {},\n  setup() {\n    const register_form = ref({});\n    // const store = useStore()\n\n    const Register = async () => {\n      try {\n        // Check if passwords match\n        if (register_form.value.password !== register_form.value.confirmPassword) {\n          // Handle password mismatch\n          console.error('Passwords do not match');\n          return;\n        }\n        const {\n          user\n        } = await createUserWithEmailAndPassword(auth, register_form.value.email, register_form.value.password);\n\n        // await store.dispatch('register', register_form.value)\n\n        await addDoc(collection(db, \"users\"), {\n          email: register_form.value.email,\n          username: register_form.value.username,\n          first_name: register_form.value.first_name,\n          last_name: register_form.value.last_name,\n          region: register_form.value.region,\n          recipes: [],\n          questions: [],\n          authId: user.uid\n        });\n        // Continue with any additional logic or redirection\n        console.log('User registered successfully:', user);\n        router.push('/about');\n      } catch (error) {\n        console.error(\"Error registering user\", error);\n      }\n    };\n    return {\n      register_form,\n      Register\n    };\n  }\n};","map":{"version":3,"names":["ref","db","auth","collection","addDoc","createUserWithEmailAndPassword","router","name","components","methods","setup","register_form","Register","value","password","confirmPassword","console","error","user","email","username","first_name","last_name","region","recipes","questions","authId","uid","log","push"],"sources":["C:\\Users\\willa\\Documents\\GitHub\\ITSC-3155\\TastyTalks\\tastytalks\\src\\views\\RegistrationPage.vue"],"sourcesContent":["<template>\r\n  <main>\r\n    <div class=\"registration-container\">\r\n      <div class=\"registration-box\">\r\n        <div class=\"logo\">\r\n            <img src=\"images/TastkyTalkMainIconSmall.jpg\" alt=\"Logo Placeholder\" />\r\n        </div>\r\n        <h1>Create an Account</h1>\r\n        <form class=\"register\" @submit.prevent=\"Register\">\r\n          <div class=\"textbox\">\r\n            <input type=\"text\" placeholder=\"First Name\" v-model=\"register_form.first_name\">\r\n          </div>\r\n          <div class=\"textbox\">\r\n            <input type=\"text\" placeholder=\"Last Name\" v-model=\"register_form.last_name\">\r\n          </div>\r\n          <div class=\"textbox\">\r\n            <input type=\"email\" placeholder=\"Email Address\" v-model=\"register_form.email\">\r\n          </div>\r\n          <div class=\"textbox\">\r\n            <input type=\"username\" placeholder=\"Username\" v-model=\"register_form.username\">\r\n          </div>\r\n  \r\n          <div class=\"textbox\">\r\n            <input type=\"password\" placeholder=\"Password\" v-model=\"register_form.password\">\r\n          </div>\r\n          <div class=\"textbox\">\r\n            <input type=\"password\" placeholder=\"Confirm Password\" v-model=\"register_form.confirmPassword\">\r\n          </div>\r\n          \r\n          <div class=\"dropdown\">\r\n            <select v-model=\"register_form.region\" required>\r\n                <option value=\"\" disabled selected>Select your country</option>\r\n                <option value=\"1\">Asia-Pacific</option>\r\n                <option value=\"2\">Caribbean</option>\r\n                <option value=\"3\">Central America</option>\r\n                <option value=\"4\">Central Asia</option>\r\n                <option value=\"5\">Eastern Europe</option>\r\n                <option value=\"6\">Middle East</option>\r\n                <option value=\"7\">Nordic Countries</option>\r\n                <option value=\"8\">North America</option>\r\n                <option value=\"9\">Northern Africa</option>\r\n                <option value=\"10\">Oceania</option>\r\n                <option value=\"11\">Southern Africa</option>\r\n                <option value=\"12\">South America</option>\r\n                <option value=\"13\">Southeast Asia</option>\r\n                <option value=\"14\">Western Europe</option>\r\n\r\n                \r\n            </select>\r\n          </div>\r\n\r\n          <button type=\"submit\" value=\"Register\" class=\"btn create-account\">Create your Account</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    </main>\r\n  </template>\r\n    \r\n  <script>\r\n\r\n  import { ref } from 'vue'\r\n  // import { useStore } from 'vuex'\r\n  import { db, auth } from '../firebase'\r\n  import { collection, addDoc } from 'firebase/firestore'\r\n  import { createUserWithEmailAndPassword } from 'firebase/auth'\r\nimport router from '@/router'\r\n\r\n  export default {\r\n    name: 'User-Register',\r\n    components: {},\r\n    methods: {},\r\n    setup() {\r\n     \r\n      const register_form = ref({})\r\n      // const store = useStore()\r\n\r\n      const Register = async () => {\r\n        try{\r\n          // Check if passwords match\r\n          if (register_form.value.password !== register_form.value.confirmPassword) {\r\n            // Handle password mismatch\r\n            console.error('Passwords do not match');\r\n            return;\r\n          }\r\n\r\n          const { user } = await createUserWithEmailAndPassword(\r\n            auth,\r\n            register_form.value.email,\r\n            register_form.value.password\r\n          );\r\n\r\n          // await store.dispatch('register', register_form.value)\r\n\r\n          await addDoc(collection(db, \"users\"), {\r\n              email: register_form.value.email,\r\n              username: register_form.value.username,\r\n              first_name: register_form.value.first_name,\r\n              last_name: register_form.value.last_name,\r\n              region: register_form.value.region,\r\n              recipes: [],\r\n              questions: [],\r\n              authId: user.uid,\r\n          });\r\n          // Continue with any additional logic or redirection\r\n          console.log('User registered successfully:', user);\r\n          router.push('/about')\r\n        } catch(error) {\r\n          console.error(\"Error registering user\", error)\r\n        }\r\n        \r\n      }\r\n      return {\r\n          register_form,\r\n          Register\r\n      }\r\n    }\r\n      \r\n  }\r\n  </script>\r\n    \r\n  <style scoped>\r\n  .registration-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding-top: 30px;\r\n    padding-bottom: 620px;\r\n    /* height: 100vh; */\r\n    background-color: #222;\r\n  }\r\n  \r\n  .registration-box {\r\n    width: 500px;\r\n    min-height: 600px;\r\n    padding: 40px;\r\n    background-color: #222;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    color: #fff;\r\n  }\r\n  \r\n  \r\n  .textbox input {\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n    margin-top: 10px;\r\n    padding: 10px;\r\n    border: none;\r\n    border-bottom: 2px solid #8CC84B;\r\n    background-color: transparent;\r\n    color: white;\r\n  }\r\n\r\n  .dropdown select{\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n    margin-top: 10px;\r\n    padding: 10px;\r\n    border: none;\r\n    border-bottom: 2px solid #8CC84B;\r\n    background-color: transparent;\r\n    color: rgb(158, 158, 158);\r\n  }\r\n  \r\n  .btn {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    margin-bottom: 10px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .create-account {\r\n    background-color: #8CC84B;\r\n    color: white;\r\n  }\r\n  \r\n /*Button animation*/\r\n  .btn:hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .logo img{\r\n    height: auto;\r\n    border-radius: 50%;\r\n    /* max-width: 50px; */\r\n  }\r\n\r\n  .logo{\r\n    margin-bottom: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";AA4DE,SAASA,GAAE,QAAS,KAAI;AACxB;AACA,SAASC,EAAE,EAAEC,IAAG,QAAS,aAAY;AACrC,SAASC,UAAU,EAAEC,MAAK,QAAS,oBAAmB;AACtD,SAASC,8BAA6B,QAAS,eAAc;AAC/D,OAAOC,MAAK,MAAO,UAAS;AAE1B,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE,CAAC,CAAC;EACdC,OAAO,EAAE,CAAC,CAAC;EACXC,KAAKA,CAAA,EAAG;IAEN,MAAMC,aAAY,GAAIX,GAAG,CAAC,CAAC,CAAC;IAC5B;;IAEA,MAAMY,QAAO,GAAI,MAAAA,CAAA,KAAY;MAC3B,IAAG;QACD;QACA,IAAID,aAAa,CAACE,KAAK,CAACC,QAAO,KAAMH,aAAa,CAACE,KAAK,CAACE,eAAe,EAAE;UACxE;UACAC,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;UACvC;QACF;QAEA,MAAM;UAAEC;QAAK,IAAI,MAAMb,8BAA8B,CACnDH,IAAI,EACJS,aAAa,CAACE,KAAK,CAACM,KAAK,EACzBR,aAAa,CAACE,KAAK,CAACC,QACtB,CAAC;;QAED;;QAEA,MAAMV,MAAM,CAACD,UAAU,CAACF,EAAE,EAAE,OAAO,CAAC,EAAE;UAClCkB,KAAK,EAAER,aAAa,CAACE,KAAK,CAACM,KAAK;UAChCC,QAAQ,EAAET,aAAa,CAACE,KAAK,CAACO,QAAQ;UACtCC,UAAU,EAAEV,aAAa,CAACE,KAAK,CAACQ,UAAU;UAC1CC,SAAS,EAAEX,aAAa,CAACE,KAAK,CAACS,SAAS;UACxCC,MAAM,EAAEZ,aAAa,CAACE,KAAK,CAACU,MAAM;UAClCC,OAAO,EAAE,EAAE;UACXC,SAAS,EAAE,EAAE;UACbC,MAAM,EAAER,IAAI,CAACS;QACjB,CAAC,CAAC;QACF;QACAX,OAAO,CAACY,GAAG,CAAC,+BAA+B,EAAEV,IAAI,CAAC;QAClDZ,MAAM,CAACuB,IAAI,CAAC,QAAQ;MACtB,EAAE,OAAMZ,KAAK,EAAE;QACbD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK;MAC/C;IAEF;IACA,OAAO;MACHN,aAAa;MACbC;IACJ;EACF;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}