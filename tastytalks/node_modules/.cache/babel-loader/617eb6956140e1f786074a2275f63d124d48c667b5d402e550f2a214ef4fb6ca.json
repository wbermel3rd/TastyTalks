{"ast":null,"code":"import { auth } from '../firebase/index';\nexport default {\n  data() {\n    return {\n      user: null,\n      showPasswordChangeFields: false,\n      newPassword: '',\n      confirmPassword: ''\n    };\n  },\n  created() {\n    this.fetchUserData();\n  },\n  methods: {\n    fetchUserData() {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        // Fetch additional user info if needed\n        this.user = currentUser;\n      }\n    },\n    changePassword() {\n      if (this.newPassword === this.confirmPassword) {\n        // Call Firebase to change the password\n        auth.currentUser.updatePassword(this.newPassword).then(() => {\n          alert('Password changed successfully');\n          this.showPasswordChangeFields = false;\n          this.newPassword = '';\n          this.confirmPassword = '';\n        }).catch(error => {\n          console.error('Error changing password:', error);\n          alert('Error changing password');\n        });\n      } else {\n        alert('Passwords do not match');\n      }\n    }\n  }\n};","map":{"version":3,"names":["auth","data","user","showPasswordChangeFields","newPassword","confirmPassword","created","fetchUserData","methods","currentUser","changePassword","updatePassword","then","alert","catch","error","console"],"sources":["C:\\Users\\willa\\Documents\\GitHub\\ITSC-3155\\TastyTalks\\tastytalks\\src\\views\\SettingsPage.vue"],"sourcesContent":["<template>\r\n    <main>\r\n    <div class=\"settings-container\">\r\n      <div class=\"settings-card\">\r\n        <div class=\"settings-header\">\r\n          <h1>Settings</h1>\r\n        </div>\r\n        <div class=\"settings-body\">\r\n          <div class=\"setting-item\">\r\n            <h2>Username:</h2>\r\n        <label for=\"username\">Name:</label>\r\n        <input type=\"text\" id=\"username\" value=\"User Name\" readonly>\r\n    </div>\r\n    <div class=\"setting-item\">\r\n      <h2>Password:</h2>\r\n  <label for=\"password\">Password:</label>\r\n  <input type=\"password\" id=\"password\" value=\"Password\" readonly>\r\n  <button id=\"change-password\" @click=\"showPasswordChangeFields = true\">Change Password</button>\r\n\r\n  <div v-if=\"showPasswordChangeFields\">\r\n    <input class=\"newpassword1\" type=\"password\" v-model=\"newPassword\" placeholder=\"New Password\">\r\n    <input type=\"password\" v-model=\"confirmPassword\" placeholder=\"Confirm New Password\">\r\n    <button @click=\"changePassword\">Confirm Change</button>\r\n  </div>\r\n    </div>\r\n    <div class=\"setting-item\">\r\n      <h2>Email:</h2>\r\n        <label for=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" value=\"user@example.com\" readonly>\r\n        <button id=\"change-email\">Change Email</button>\r\n    </div>\r\n    <div class=\"setting-item\">\r\n      <h2>Account:</h2>\r\n        <button id=\"logout\">Log Out</button>\r\n        <button id=\"delete-account\" class=\"danger\">Delete Account</button>\r\n    </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</main>\r\n  </template>\r\n  \r\n\r\n  <script>\r\n  import { auth } from '../firebase/index';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        user: null,\r\n        showPasswordChangeFields: false,\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchUserData();\r\n    },\r\n    methods: {\r\n      fetchUserData() {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n          // Fetch additional user info if needed\r\n          this.user = currentUser;\r\n        }\r\n      },\r\n      changePassword() {\r\n    if (this.newPassword === this.confirmPassword) {\r\n      // Call Firebase to change the password\r\n      auth.currentUser.updatePassword(this.newPassword)\r\n        .then(() => {\r\n          alert('Password changed successfully');\r\n          this.showPasswordChangeFields = false;\r\n          this.newPassword = '';\r\n          this.confirmPassword = '';\r\n        })\r\n        .catch(error => {\r\n          console.error('Error changing password:', error);\r\n          alert('Error changing password');\r\n        });\r\n    } else {\r\n      alert('Passwords do not match');\r\n    }\r\n  },\r\n    }\r\n  }\r\n  </script>\r\n\r\n\r\n<style scoped>\r\n.settings-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: calc(100vh - 160px); /* Adjust based on your header and footer height */\r\n  padding: 20px;\r\n}\r\n\r\n.settings-card {\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 800px; /* Increased width */\r\n  min-height: 800px;\r\n  margin: auto;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column; /* Stack children vertically */\r\n}\r\n\r\n.settings-header {\r\n  background-color: #4c934c; /* Similar green from your image */\r\n  color: #fff;\r\n  padding: 20px;\r\n  text-align: center;\r\n  position: relative;\r\n}\r\n\r\n\r\n.settings-body {\r\n  padding: 20px;\r\n  flex-grow: 1; /* Makes the body take up all available space */\r\n}\r\n\r\n.settings-info p {\r\n  font-size: 16px;\r\n  color: #333;\r\n  line-height: 1.5;\r\n  margin-bottom: 30px; /* Spacing between paragraphs */\r\n}\r\n\r\n.settings-info strong {\r\n  color: #4c934c; /* Similar green for emphasis */\r\n}\r\n\r\n\r\n.setting-item {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.setting-item label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n}\r\n\r\n.setting-item input {\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.setting-item button {\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n}\r\n\r\n#delete-account {\r\n    margin-left: 10px;\r\n    margin-top: 15px;\r\n}\r\n\r\n#logout {\r\n    margin-right: 10px;\r\n}\r\n.setting-item .danger {\r\n    background-color: #f44336;\r\n}\r\n\r\n.newpassword1 {\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n/* Adding a little bit of responsiveness */\r\n@media (max-width: 600px) {\r\n    .setting-item button {\r\n        width: 100%;\r\n    }\r\n}\r\n</style>"],"mappings":"AA4CE,SAASA,IAAG,QAAS,mBAAmB;AAExC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,wBAAwB,EAAE,KAAK;MACnCC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPD,aAAaA,CAAA,EAAG;MACd,MAAME,WAAU,GAAIT,IAAI,CAACS,WAAW;MACpC,IAAIA,WAAW,EAAE;QACf;QACA,IAAI,CAACP,IAAG,GAAIO,WAAW;MACzB;IACF,CAAC;IACDC,cAAcA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACN,WAAU,KAAM,IAAI,CAACC,eAAe,EAAE;QAC7C;QACAL,IAAI,CAACS,WAAW,CAACE,cAAc,CAAC,IAAI,CAACP,WAAW,EAC7CQ,IAAI,CAAC,MAAM;UACVC,KAAK,CAAC,+BAA+B,CAAC;UACtC,IAAI,CAACV,wBAAuB,GAAI,KAAK;UACrC,IAAI,CAACC,WAAU,GAAI,EAAE;UACrB,IAAI,CAACC,eAAc,GAAI,EAAE;QAC3B,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAChDF,KAAK,CAAC,yBAAyB,CAAC;QAClC,CAAC,CAAC;MACN,OAAO;QACLA,KAAK,CAAC,wBAAwB,CAAC;MACjC;IACF;EACE;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}