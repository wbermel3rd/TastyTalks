{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/HomePage.vue';\nimport UserLogin from '../views/LoginPage.vue';\nimport UserRegister from '../views/RegistrationPage.vue';\nimport { auth } from '../firebase';\nimport FullscreenRecipe from '../views/FullscreenRecipe.vue';\nimport ProfilePage from '../views/ProfilePage.vue';\nimport { onAuthStateChanged } from 'firebase/auth';\n\n//Creating Questions and Recipes Import\n\nimport ChoosePost from '../views/ChoosePost.vue';\nimport CreateRecipe from '../views/CreateRecipe.vue';\nimport CreateQuestion from '../views/CreateQuestion.vue';\n\n//Question and Recipe Feed Import\n\nimport QuestionFeed from '../views/QuestionFeed.vue';\nimport RecipeFeed from '../views/RecipeFeed.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/about',\n  name: 'About',\n  component: () => import('../views/AboutPage.vue')\n}, {\n  path: '/login',\n  name: 'UserLogin',\n  component: UserLogin\n}, {\n  path: '/register',\n  name: 'UserRegister',\n  component: UserRegister\n}, {\n  path: '/choosepost',\n  name: 'ChoosePost',\n  component: ChoosePost\n}, {\n  path: '/createrecipe',\n  name: 'CreateRecipe',\n  component: CreateRecipe,\n  // Require the authentification of the user to be able to see the page. \n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/createquestion',\n  name: 'CreateQuestion',\n  component: CreateQuestion,\n  // Require the authentification of the user to be able to see the page. \n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/recipefeed',\n  name: 'RecipeFeed',\n  component: RecipeFeed\n}, {\n  path: '/questionfeed',\n  name: 'QuestionFeed',\n  component: QuestionFeed\n}, {\n  path: '/recipe/:id',\n  name: 'Recipe',\n  component: FullscreenRecipe\n}, {\n  path: '/question/:id',\n  name: 'Question',\n  component: () => import('../views/FullscreenQuestion.vue')\n}, {\n  path: '/settings',\n  name: 'Settings',\n  component: () => import('../views/SettingsPage.vue')\n}, {\n  path: '/profile',\n  name: 'ProfilePage',\n  component: ProfilePage,\n  beforeEnter: (to, from, next) => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        next(); // User is signed in, continue to profile page\n      } else {\n        next({\n          name: 'UserLogin'\n        }); // No user is signed in, redirect to login\n      }\n    });\n  }\n}];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.path === '/login' && auth.currentUser) {\n    next('/');\n    return;\n  }\n  if (to.matched.some(record => record.meta.requiresAuth) && !auth.currentUser) {\n    next('/login');\n    return;\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","UserLogin","UserRegister","auth","FullscreenRecipe","ProfilePage","onAuthStateChanged","ChoosePost","CreateRecipe","CreateQuestion","QuestionFeed","RecipeFeed","routes","path","name","component","meta","requiresAuth","beforeEnter","to","from","next","user","router","history","process","env","BASE_URL","beforeEach","currentUser","matched","some","record"],"sources":["C:/Users/willa/Documents/GitHub/ITSC-3155/TastyTalks/tastytalks/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport Home from '../views/HomePage.vue'\r\nimport UserLogin from '../views/LoginPage.vue'\r\nimport UserRegister from '../views/RegistrationPage.vue'\r\nimport { auth } from '../firebase'\r\nimport FullscreenRecipe from '../views/FullscreenRecipe.vue'\r\nimport ProfilePage from '../views/ProfilePage.vue'\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\n\r\n//Creating Questions and Recipes Import\r\n\r\nimport ChoosePost from '../views/ChoosePost.vue'\r\nimport CreateRecipe from '../views/CreateRecipe.vue'\r\nimport CreateQuestion from '../views/CreateQuestion.vue'\r\n\r\n\r\n//Question and Recipe Feed Import\r\n\r\nimport QuestionFeed from '../views/QuestionFeed.vue'\r\nimport RecipeFeed from '../views/RecipeFeed.vue'\r\n\r\n\r\n\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: Home,    \r\n  },\r\n  {\r\n    path: '/about',\r\n    name: 'About',\r\n    component: () => import('../views/AboutPage.vue'),\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'UserLogin',\r\n    component: UserLogin\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'UserRegister',\r\n    component: UserRegister\r\n  },\r\n  {\r\n    path: '/choosepost',\r\n    name: 'ChoosePost',\r\n    component: ChoosePost,\r\n  },\r\n  {\r\n    path: '/createrecipe',\r\n    name: 'CreateRecipe',\r\n    component: CreateRecipe,\r\n    // Require the authentification of the user to be able to see the page. \r\n    meta: {\r\n      requiresAuth: true\r\n    }\r\n  },\r\n  {\r\n    path: '/createquestion',\r\n    name: 'CreateQuestion',\r\n    component: CreateQuestion,\r\n    // Require the authentification of the user to be able to see the page. \r\n    meta: {\r\n      requiresAuth: true\r\n    }\r\n  },\r\n  {\r\n    path: '/recipefeed',\r\n    name: 'RecipeFeed',\r\n    component: RecipeFeed\r\n  },\r\n  {\r\n    path: '/questionfeed',\r\n    name: 'QuestionFeed',\r\n    component: QuestionFeed\r\n  },\r\n  {\r\n    path: '/recipe/:id',\r\n    name: 'Recipe',\r\n    component: FullscreenRecipe\r\n  },\r\n  {\r\n    path: '/question/:id',\r\n    name: 'Question',\r\n    component: () => import('../views/FullscreenQuestion.vue')\r\n  },\r\n  {\r\n    path: '/settings',\r\n    name: 'Settings',\r\n    component: () => import('../views/SettingsPage.vue'),\r\n  },\r\n  { \r\n    path: '/profile', \r\n    name: 'ProfilePage', \r\n    component: ProfilePage,\r\n    beforeEnter: (to, from, next) => {\r\n      onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n          next(); // User is signed in, continue to profile page\r\n        } else {\r\n          next({ name: 'UserLogin' }); // No user is signed in, redirect to login\r\n        }\r\n      });\r\n    } \r\n  }\r\n  \r\n  \r\n  \r\n  \r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.path === '/login' && auth.currentUser) {\r\n    next('/')\r\n    return;\r\n  }\r\n\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !auth.currentUser) {\r\n    next('/login')\r\n    return;\r\n  }\r\n\r\n  next();\r\n})\r\n\r\nexport default router"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}