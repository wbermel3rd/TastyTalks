{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { addDoc, collection, updateDoc, doc, arrayUnion, getDocs, query, where } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { ref } from 'vue';\nimport { uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { firebaseRef, storage, auth } from '../firebase';\nexport default {\n  setup() {\n    const recipe_form = ref({\n      title: ''\n    });\n    const newTag = ref('');\n    const showDropdown = ref({\n      course: false,\n      region: false,\n      specialDiets: false,\n      holiday: false\n    });\n    const tags = ref([]);\n    const addTag = tag => {\n      if (tag.trim() !== '') {\n        tags.value.push({\n          name: tag\n        });\n        newTag.value = '';\n      }\n    };\n    const deleteTag = index => {\n      tags.value.splice(index, 1);\n    };\n    const toggleDropdown = category => {\n      // Close all dropdowns\n      for (const key in showDropdown.value) {\n        showDropdown.value[key] = false;\n      }\n      // Open the clicked dropdown\n      showDropdown.value[category] = true;\n    };\n\n    // Create a recipe post in the database\n    const addPost = async event => {\n      event.preventDefault();\n      const user = auth.currentUser;\n      if (user) {\n        const userId = auth.currentUser.uid;\n        try {\n          //find the user's document with same authId\n          const userQuery = query(collection(db, 'users'), where('authId', '==', auth.currentUser.uid));\n          const userSnapshot = await getDocs(userQuery);\n          const userDoc = userSnapshot.docs[0];\n          const userDocId = userDoc.id;\n          if (userDoc.exists()) {\n            const userData = userDoc.data();\n            console.log(\"userData:\", userData);\n            if (userData && userData.username && userData.region) {\n              const username = userData.username;\n              const userRegion = userData.region;\n              console.log(\"username:\", username);\n              console.log(\"userRegion:\", userRegion);\n              const imageInput = document.getElementById(\"imageUpload\");\n              const file = imageInput.files[0];\n              let imageUrl = '';\n              if (file) {\n                try {\n                  // Perform the upload\n                  const fileRef = firebaseRef(storage, `images/recipePics/${file.name}`);\n\n                  // Now upload the file\n                  const uploadTaskSnapshot = await uploadBytes(fileRef, file);\n                  imageUrl = await getDownloadURL(uploadTaskSnapshot.ref);\n                } catch (error) {\n                  console.error(\"Error uploading file: \", error);\n                  // Handle the error (e.g., display an error message)\n                  return;\n                }\n              }\n              try {\n                const recipeRef = await addDoc(collection(db, 'recipes'), {\n                  date: Date.now(),\n                  ingredients: recipe_form.value.ingredients,\n                  instructions: recipe_form.value.instructions,\n                  tags: tags.value,\n                  title: recipe_form.value.title,\n                  regionID: recipe_form.value.region,\n                  summary: '',\n                  image: imageUrl,\n                  user: userId,\n                  username: username,\n                  userRegion: userRegion\n                  // MISSING SUMMARY DECLARATION: NO INPUT FIELD IN FORM\n                  // SEPARATE INSTRUCTIONS AND SUMMARY\n                });\n                //add the recipeId to the user's created recipes\n                await updateDoc(doc(db, 'users', userDocId), {\n                  recipes: arrayUnion(recipeRef.id)\n                });\n\n                //redirect\n                window.location.href = '/recipefeed';\n              } catch (error) {\n                console.error(\"Error adding document: \", error);\n                // Handle the error (e.g., display an error message)\n              }\n            } else {\n              console.error(\"Error fetching user data, username, or regionID is undefined\");\n            }\n          } else {\n            console.error(\"User document does not exist\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching user document\", error);\n        }\n      } else {\n        console.log(\"User not authenticated\");\n      }\n    };\n    return {\n      recipe_form,\n      newTag,\n      showDropdown,\n      tags,\n      addTag,\n      deleteTag,\n      toggleDropdown,\n      addPost\n    };\n  },\n  methods: {}\n};","map":{"version":3,"names":["addDoc","collection","updateDoc","doc","arrayUnion","getDocs","query","where","db","ref","uploadBytes","getDownloadURL","firebaseRef","storage","auth","setup","recipe_form","title","newTag","showDropdown","course","region","specialDiets","holiday","tags","addTag","tag","trim","value","push","name","deleteTag","index","splice","toggleDropdown","category","key","addPost","event","preventDefault","user","currentUser","userId","uid","userQuery","userSnapshot","userDoc","docs","userDocId","id","exists","userData","data","console","log","username","userRegion","imageInput","document","getElementById","file","files","imageUrl","fileRef","uploadTaskSnapshot","error","recipeRef","date","Date","now","ingredients","instructions","regionID","summary","image","recipes","window","location","href","methods"],"sources":["C:\\Users\\willa\\Documents\\GitHub\\ITSC-3155\\TastyTalks\\tastytalks\\src\\views\\CreateRecipe.vue"],"sourcesContent":["<template>\r\n    <main>\r\n      <div class=\"divForm\">\r\n\r\n        <!-- FORM CONTAINER -->\r\n        <div class=\"form-newPost\">\r\n            <div class=\"title-CreateNewPost\">\r\n                <h1>Create new Recipe</h1>\r\n            </div>\r\n\r\n            <!-- FORM -->\r\n\r\n            <!-- The form action goes to /posts because the page should be redirected to the post page with all the posts when the person click submit -->\r\n            <form @submit=\"addPost\" enctype= multipart/form-data method=\"POST\">\r\n\r\n                <!-- Receipe Name  -->\r\n                <label for=\"title\">Recipe Name</label>\r\n                <input type=\"text\" name=\"recipeName\" id=\"recipeName\" placeholder=\"Recipe Name\" v-model=\"recipe_form.title\" required>\r\n\r\n                <!-- Receipe Category -->\r\n                <label for=\"category\">Region</label>\r\n                <select name=\"countryOfOrigin\" id=\"countrySelect\" v-model=\"recipe_form.region\" required>\r\n                    <option value=\"\" selected disabled>Select Region</option>\r\n                    <option value=\"1\">Asia-Pacific</option>\r\n                    <option value=\"2\">Caribbean</option>\r\n                    <option value=\"3\">Central America</option>\r\n                    <option value=\"4\">Central Asia</option>\r\n                    <option value=\"5\">Eastern Europe</option>\r\n                    <option value=\"6\">Middle East</option>\r\n                    <option value=\"7\">Nordic Countries</option>\r\n                    <option value=\"8\">North America</option>\r\n                    <option value=\"9\">Northern Africa</option>\r\n                    <option value=\"10\">Oceania</option>\r\n                    <option value=\"11\">Southern Africa</option>\r\n                    <option value=\"12\">South America</option>\r\n                    <option value=\"13\">Southeast Asia</option>\r\n                    <option value=\"14\">Western Europe</option>\r\n                </select>\r\n\r\n                <!-- Tags Dropdown -->\r\n                <label for=\"tags\">Tags</label>\r\n                <br>\r\n                <br>\r\n\r\n                <div class=\"tag-dropdown\">\r\n                  <button class=\"tag-dropdown-btn\" @click=\"toggleDropdown('course')\">Course</button>\r\n                  <div v-if=\"showDropdown.course\" class=\"tag-dropdown-content\">\r\n                    <a href=\"#\" @click.prevent=\"addTag('Starter')\">Starter</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Entrée')\">Entrée</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Dessert')\">Dessert</a>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"tag-dropdown\">\r\n                  <button class=\"tag-dropdown-btn\" @click=\"toggleDropdown('region')\">Season</button>\r\n                  <div v-if=\"showDropdown.region\" class=\"tag-dropdown-content\">\r\n                    <a href=\"#\" @click.prevent=\"addTag('Spring')\">Spring</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Summer')\">Summer</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Fall')\">Fall</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Winter')\">Winter</a>\r\n                    <!-- Add more predefined tags for region dropdown -->\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"tag-dropdown\">\r\n                  <button class=\"tag-dropdown-btn\" @click=\"toggleDropdown('specialDiets')\">Special Diets</button>\r\n                  <div v-if=\"showDropdown.specialDiets\" class=\"tag-dropdown-content\">\r\n                    <a href=\"#\" @click.prevent=\"addTag('Vegetarian')\">Vegetarian</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Vegan')\">Vegan</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Gluten-Free')\">Gluten-Free</a>\r\n                    <!-- Add more predefined tags for special diets dropdown -->\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"tag-dropdown\">\r\n                  <button class=\"tag-dropdown-btn\" @click=\"toggleDropdown('holiday')\">Holiday</button>\r\n                  <div v-if=\"showDropdown.holiday\" class=\"tag-dropdown-content\">\r\n                    <a href=\"#\" @click.prevent=\"addTag('Thanksgiving')\">Thanksgiving</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Halloween')\">Halloween</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Independence Day')\">Independence Day</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Easter')\">Easter</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Christmas')\">Christmas</a>\r\n                    <a href=\"#\" @click.prevent=\"addTag('Valentine\\'s Day')\">Valentine's Day</a>\r\n                    <!-- Add more predefined tags for holiday dropdown -->\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <!-- Selected Tags -->\r\n                <div class=\"tag-container\">\r\n                  <div class=\"tag-list\" id=\"tagList\">\r\n                    <div v-for=\"(tag, index) in tags\" :key=\"index\" class=\"tag\" :style=\"{ backgroundColor: tag.color }\">\r\n                      <div class=\"tag-item\">\r\n                        {{ tag.name }}\r\n                        <span class=\"tag-delete\" @click=\"deleteTag(index)\">×</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <!-- This is for inputing tag with a input bar (Could be usefull in the future) -->\r\n                <!-- <div class=\"tag-input\">\r\n                    <input type=\"text\" id=\"tagInput\" placeholder=\"Add a tag\" v-model=\"newTag\">\r\n                    <button type=\"button\" @click.prevent=\"addTag(newTag)\">Add Tag</button>\r\n                </div> -->\r\n\r\n\r\n                <br>\r\n\r\n                <!-- Ingredients -->\r\n                <label for=\"ingredients\">Recipe Ingredients</label>\r\n                <input type=\"text\" name=\"recipeIngredients\" id=\"recipeIngredients\" placeholder=\"Recipe Ingredients\" v-model=\"recipe_form.ingredients\" required>\r\n                \r\n                <!-- Instructions, description and details -->\r\n                <label for=\"details\">Recipe Instructions and Description</label>\r\n                <textarea id=\"text\" name=\"recipeDescription\" type=\"text\" minlength=\"10\" placeholder=\"Recipe Details...\" v-model=\"recipe_form.instructions\" required></textarea>\r\n\r\n\r\n                <!-- Image upload -->\r\n                <label for=\"image\">Recipe Image</label>\r\n                <input \r\n                type=\"file\" \r\n                id=\"imageUpload\"\r\n                accept=\"image/*\"\r\n                required>\r\n\r\n                <!-- <img :src=\"picture.value\" alt=\"preview\">      -->\r\n\r\n                <!-- Submit recipe -->\r\n                <input type=\"submit\" @click=\"addPost\" value=\"Submit\" >\r\n            </form>\r\n\r\n        </div>\r\n      \r\n      \r\n      </div>  \r\n    </main>\r\n</template>\r\n\r\n<script>\r\nimport { addDoc, collection, updateDoc, doc, arrayUnion, getDocs, query, where } from 'firebase/firestore';\r\nimport { db } from '../firebase'\r\nimport { ref } from 'vue'\r\nimport { uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { firebaseRef, storage, auth} from '../firebase';\r\n\r\n\r\nexport default {\r\n\r\n  setup() {\r\n\r\n    const recipe_form = ref({\r\n      title: '',\r\n\r\n    });\r\n    const newTag = ref('');\r\n    const showDropdown = ref({\r\n      course: false,\r\n      region: false,\r\n      specialDiets: false,\r\n      holiday: false,\r\n    });\r\n    const tags = ref([]);\r\n\r\n    const addTag = (tag) => {\r\n      if (tag.trim() !== '') {\r\n        tags.value.push({ name: tag });\r\n        newTag.value = '';\r\n      }\r\n    };\r\n\r\n    const deleteTag = (index) => {\r\n      tags.value.splice(index, 1);\r\n    };\r\n\r\n    const toggleDropdown = (category) => {\r\n      // Close all dropdowns\r\n      for (const key in showDropdown.value) {\r\n        showDropdown.value[key] = false;\r\n      }\r\n      // Open the clicked dropdown\r\n      showDropdown.value[category] = true;\r\n    };\r\n\r\n    // Create a recipe post in the database\r\n    const addPost = async (event) => {\r\n\r\n      event.preventDefault();\r\n\r\n      const user = auth.currentUser\r\n\r\n      if(user){\r\n\r\n        const userId = auth.currentUser.uid\r\n\r\n        try{\r\n          //find the user's document with same authId\r\n          const userQuery = query(collection(db, 'users'), where('authId', '==', auth.currentUser.uid));\r\n          const userSnapshot = await getDocs(userQuery);\r\n          const userDoc = userSnapshot.docs[0]\r\n          const userDocId = userDoc.id\r\n\r\n          if (userDoc.exists()) {\r\n            const userData = userDoc.data();\r\n            console.log(\"userData:\", userData);\r\n            \r\n            if(userData && userData.username && userData.region) {\r\n\r\n              const username = userData.username\r\n              const userRegion = userData.region\r\n\r\n              console.log(\"username:\", username);\r\n              console.log(\"userRegion:\", userRegion);\r\n\r\n              const imageInput = document.getElementById(\"imageUpload\");\r\n              const file = imageInput.files[0];\r\n              let imageUrl = '';\r\n\r\n              if (file) {\r\n                try {\r\n                  // Perform the upload\r\n                  const fileRef = firebaseRef(storage, `images/recipePics/${file.name}`);\r\n\r\n                  // Now upload the file\r\n                  const uploadTaskSnapshot = await uploadBytes(fileRef, file);\r\n                  imageUrl = await getDownloadURL(uploadTaskSnapshot.ref);\r\n                } \r\n                \r\n                catch (error) {\r\n                  console.error(\"Error uploading file: \", error);\r\n                  // Handle the error (e.g., display an error message)\r\n                  return;\r\n                }\r\n              }\r\n\r\n              try {\r\n                const recipeRef = await addDoc(collection(db, 'recipes'), {\r\n                  date: Date.now(),\r\n                  ingredients: recipe_form.value.ingredients,\r\n                  instructions: recipe_form.value.instructions,\r\n                  tags: tags.value,\r\n                  title: recipe_form.value.title,\r\n                  regionID: recipe_form.value.region,\r\n                  summary: '',\r\n                  image: imageUrl,\r\n                  user: userId,\r\n                  username: username,\r\n                  userRegion: userRegion,\r\n                  // MISSING SUMMARY DECLARATION: NO INPUT FIELD IN FORM\r\n                  // SEPARATE INSTRUCTIONS AND SUMMARY\r\n                  \r\n                });\r\n                //add the recipeId to the user's created recipes\r\n                await updateDoc(doc(db, 'users', userDocId), {\r\n                  recipes: arrayUnion(recipeRef.id),\r\n                });\r\n\r\n                //redirect\r\n                window.location.href = '/recipefeed';\r\n\r\n              } catch (error) {\r\n                console.error(\"Error adding document: \", error);\r\n                // Handle the error (e.g., display an error message)\r\n              }\r\n            } else{\r\n              console.error(\"Error fetching user data, username, or regionID is undefined\")\r\n            }\r\n          } else {\r\n            console.error(\"User document does not exist\")\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching user document\", error)\r\n        }\r\n      } else {\r\n      console.log(\"User not authenticated\")\r\n      }\r\n   };\r\n\r\n      return {\r\n        recipe_form,\r\n        newTag,\r\n        showDropdown,\r\n        tags,\r\n        addTag,\r\n        deleteTag,\r\n        toggleDropdown,\r\n        addPost,\r\n      };\r\n    },\r\n    methods:{\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.Create-Container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-top: 300px;\r\n    padding-bottom: 850px;\r\n    height: 100vh;\r\n}\r\nh1{\r\n    color: white;\r\n    padding-bottom: 10px;\r\n}\r\n\r\nh2{\r\n    color: white;\r\n}\r\n\r\n\r\n/* ///////new Posts Main Section//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */\r\n\r\n\r\n\r\n\r\n\r\n/* /////// Form ///////////////////// */\r\n\r\n.form-newPost {\r\n    border-radius: 5px;\r\n    padding: 20px;\r\n    background-color: var(--Trying);\r\n    font-family: var(--primaryFont);\r\n    /* Control the width of the Receipe Form container */\r\n    /* max-width: 800px; */\r\n  }\r\n\r\n\r\n.title-CreateNewPost h1{\r\n    text-align: center;\r\n    /* justify-content: center; */\r\n\r\n}\r\n\r\nlabel{\r\n    font-family: var(--primaryFont);\r\n    color: #4c934c;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n}\r\n\r\ninput[type=text], select, textarea[type=text], input[type=file], input[type=date], input[type=datetime], input[type=datetime-local] {\r\n    width: 100%;\r\n    padding: 12px 20px;\r\n    margin: 15px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n\r\ninput[type=submit] {\r\n    width: 100%;\r\n    background-color: var(--fourthColor);\r\n    color: white;\r\n    padding: 14px 20px;\r\n    margin: 8px 0;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n\r\ninput[type=submit]:hover {\r\n    background-color: var(--lightFourthColor)\r\n  }\r\n\r\n\r\n\r\n/* Tags Dropdown styles */\r\n.tag-dropdown {\r\n  display: inline-block;\r\n  position: relative;\r\n  padding-right: 10px;\r\n}\r\n\r\n.tag-dropdown-btn {\r\n  background-color: var(--fourthColor);\r\n  color: white;\r\n  padding: 14px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.tag-dropdown-content {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: #f9f9f9;\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n  z-index: 1;\r\n}\r\n\r\n.tag-dropdown-content a {\r\n  color: black;\r\n  padding: 12px 16px;\r\n  text-decoration: none;\r\n  display: block;\r\n}\r\n\r\n\r\n.tag-dropdown:hover .tag-dropdown-content {\r\n  display: block;\r\n}\r\n\r\n.tag-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n}\r\n\r\n.tag {\r\n  margin: 4px;\r\n  border-radius: 4px;\r\n  padding: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.tag-item {\r\n  margin-right: 8px;\r\n}\r\n\r\n.tag-delete {\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  color: white;\r\n  background-color: #ff4d4d;\r\n  padding: 4px;\r\n  border-radius: 50%;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}