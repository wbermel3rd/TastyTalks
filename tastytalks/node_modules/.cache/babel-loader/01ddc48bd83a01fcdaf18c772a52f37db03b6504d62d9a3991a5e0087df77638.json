{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"divForm\"\n};\nconst _hoisted_2 = {\n  class: \"form-newPost\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-CreateNewPost\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Create new question\")], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  action: \"/post\",\n  enctype: \"multipart/form-data\",\n  method: \"POST\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Question Name\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"category\"\n}, \"Region\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"\\\" selected disabled>Select Region</option><option value=\\\"1\\\">Asia-Pacific</option><option value=\\\"2\\\">Caribbean</option><option value=\\\"3\\\">Central America</option><option value=\\\"4\\\">Central Asia</option><option value=\\\"5\\\">Eastern Europe</option><option value=\\\"6\\\">Middle East</option><option value=\\\"7\\\">Nordic Countries</option><option value=\\\"8\\\">North America</option><option value=\\\"9\\\">Northern Africa</option><option value=\\\"10\\\">Oceania</option><option value=\\\"11\\\">Southern Africa</option><option value=\\\"12\\\">South America</option><option value=\\\"13\\\">Southeast Asia</option><option value=\\\"14\\\">Western Europe</option>\", 15);\nconst _hoisted_22 = [_hoisted_7];\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"details\"\n}, \"Question Instructions and Description\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" FORM CONTAINER \"), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createCommentVNode(\" FORM \"), _createCommentVNode(\" The form action goes to /posts because the page should be redirected to the post page with all the posts when the person click submit \"), _createElementVNode(\"form\", _hoisted_4, [_createCommentVNode(\" Question Name  \"), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"questionName\",\n    id: \"questionName\",\n    placeholder: \"Question Name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.question_form.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.question_form.title]]), _createCommentVNode(\" Question Category \"), _hoisted_6, _withDirectives(_createElementVNode(\"select\", {\n    name: \"countryOfOrigin\",\n    id: \"countrySelect\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.question_form.region = $event),\n    required: \"\"\n  }, [..._hoisted_22], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.question_form.region]]), _createCommentVNode(\" Instructions, description, and details \"), _hoisted_23, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"text\",\n    name: \"questionDescription\",\n    minlength: \"10\",\n    placeholder: \"Question Details...\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.question_form.description = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.question_form.description]]), _createElementVNode(\"input\", {\n    type: \"submit\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.addPost && $setup.addPost(...args)),\n    value: \"Submit\"\n  })])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","action","enctype","method","for","_hoisted_7","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","name","id","placeholder","$setup","question_form","title","$event","required","_hoisted_6","region","_hoisted_23","minlength","description","onClick","_cache","args","addPost","value"],"sources":["C:\\Users\\willa\\Documents\\GitHub\\ITSC-3155\\TastyTalks\\tastytalks\\src\\views\\CreateQuestion.vue"],"sourcesContent":["<template>\r\n  <main>\r\n    <div class=\"divForm\">\r\n      <!-- FORM CONTAINER -->\r\n      <div class=\"form-newPost\">\r\n        <div class=\"title-CreateNewPost\">\r\n          <h1>Create new question</h1>\r\n        </div>\r\n\r\n        <!-- FORM -->\r\n        <!-- The form action goes to /posts because the page should be redirected to the post page with all the posts when the person click submit -->\r\n        <form action=\"/post\" enctype=\"multipart/form-data\" method=\"POST\">\r\n          <!-- Question Name  -->\r\n          <label for=\"title\">Question Name</label>\r\n          <input type=\"text\" name=\"questionName\" id=\"questionName\" placeholder=\"Question Name\" v-model=\"question_form.title\" required>\r\n\r\n          <!-- Question Category -->\r\n          <label for=\"category\">Region</label>\r\n          <select name=\"countryOfOrigin\" id=\"countrySelect\" v-model=\"question_form.region\" required>\r\n            <option value=\"\" selected disabled>Select Region</option>\r\n            <option value=\"1\">Asia-Pacific</option>\r\n            <option value=\"2\">Caribbean</option>\r\n            <option value=\"3\">Central America</option>\r\n            <option value=\"4\">Central Asia</option>\r\n            <option value=\"5\">Eastern Europe</option>\r\n            <option value=\"6\">Middle East</option>\r\n            <option value=\"7\">Nordic Countries</option>\r\n            <option value=\"8\">North America</option>\r\n            <option value=\"9\">Northern Africa</option>\r\n            <option value=\"10\">Oceania</option>\r\n            <option value=\"11\">Southern Africa</option>\r\n            <option value=\"12\">South America</option>\r\n            <option value=\"13\">Southeast Asia</option>\r\n            <option value=\"14\">Western Europe</option>\r\n          </select>\r\n\r\n          <!-- Instructions, description, and details -->\r\n          <label for=\"details\">Question Instructions and Description</label>\r\n          <textarea id=\"text\" name=\"questionDescription\" minlength=\"10\" placeholder=\"Question Details...\" v-model=\"question_form.description\" required></textarea>\r\n\r\n          <input type=\"submit\" @click=\"addPost\" value=\"Submit\">\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport { addDoc, collection, updateDoc, doc, arrayUnion, getDocs, query, where } from 'firebase/firestore';\r\nimport { auth } from '../firebase';\r\nimport { db } from '../firebase';\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const question_form = ref({\r\n      title: '',\r\n      region: '',\r\n      description: '', // Add description to the form data\r\n    });\r\n\r\n    // Create a question post in the database\r\n    const addPost = async (event) => {\r\n\r\n      event.preventDefault();\r\n\r\n      const user = auth.currentUser\r\n\r\n      if(user){\r\n\r\n        const userId = auth.currentUser.uid\r\n\r\n        try{\r\n          \r\n          const userQuery = query(collection(db, 'users'), where('authId', '==', auth.currentUser.uid));\r\n          const userSnapshot = await getDocs(userQuery);\r\n          const userDoc = userSnapshot.docs[0]\r\n          const userDocId = userDoc.id\r\n\r\n          if (userDoc.exists()) {\r\n            const userData = userDoc.data();\r\n            console.log(\"userData:\", userData);\r\n            \r\n            if(userData && userData.username && userData.region) {\r\n\r\n              const username = userData.username\r\n              const userRegion = userData.region\r\n\r\n              console.log(\"username:\", username);\r\n              console.log(\"userRegion:\", userRegion);\r\n\r\n              const questionRef = await addDoc(collection(db, 'questions'), {\r\n                date: Date.now(),\r\n                title: question_form.value.title,\r\n                regionID: question_form.value.region,\r\n                description: question_form.value.description,\r\n                user: userId,\r\n                username: username,\r\n                userRegion: userRegion,\r\n              });\r\n\r\n              //add the questionId to the user's created questions\r\n              await updateDoc(doc(db, 'users', userDocId), {\r\n                  questions: arrayUnion(questionRef.id),\r\n              });\r\n\r\n              //redirect \r\n              window.location.href = '/questionfeed';\r\n            } else{\r\n              console.error(\"Error fetching user data, username, or regionID is undefined\")\r\n            }\r\n          } else {\r\n            console.error(\"User document does not exist\")\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching user document\", error)\r\n        }\r\n      } else {\r\n      console.log(\"User not authenticated\")\r\n      }\r\n    };\r\n\r\n    return {\r\n      question_form,\r\n      addPost,\r\n    };\r\n  },\r\n};\r\n</script>\r\n  \r\n  <style>\r\n  /* Add your styling for clickable-div here */\r\n  .clickable-div {\r\n    cursor: pointer;\r\n    border: 1px solid #ccc;\r\n    padding: 20px;\r\n    margin: 10px;\r\n    text-align: center;\r\n    transition: background-color 0.3s; /* Add a smooth transition effect */\r\n  }\r\n\r\n  .clickable-div:hover {\r\n    background-color: #e0e0e0; /* Change the background color on hover */\r\n  }\r\n\r\n\r\n/* /////// Form ///////////////////// */\r\n\r\n.form-newPost {\r\n    border-radius: 5px;\r\n    padding: 20px;\r\n    background-color: var(--Trying);\r\n    font-family: var(--primaryFont);\r\n    /* Control the width of the Question Form container */\r\n    /* max-width: 800px; */\r\n  }\r\n\r\n\r\n.title-CreateNewPost h1{\r\n    text-align: center;\r\n    color: #4c934c;\r\n    /* justify-content: center; */\r\n\r\n}\r\n\r\nlabel{\r\n    font-family: var(--primaryFont);\r\n    color: #4c934c;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n}\r\n\r\ninput[type=text], select, textarea[type=text], input[type=file], input[type=date], input[type=datetime], input[type=datetime-local] {\r\n    width: 100%;\r\n    padding: 12px 20px;\r\n    margin: 15px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n\r\ninput[type=submit] {\r\n    width: 100%;\r\n    background-color: var(--fourthColor);\r\n    color: white;\r\n    padding: 14px 20px;\r\n    margin: 8px 0;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n\r\ninput[type=submit]:hover {\r\n    background-color: var(--lightFourthColor)\r\n  }\r\n\r\n  textarea {\r\n    width: 100%;\r\n    padding: 12px 20px;\r\n    margin: 15px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAAS;;EAEbA,KAAK,EAAC;AAAc;gCACvBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAqB,I,aAC9BC,mBAAA,CAA4B,YAAxB,qBAAmB,E;;EAKnBC,MAAM,EAAC,OAAO;EAACC,OAAO,EAAC,qBAAqB;EAACC,MAAM,EAAC;;gCAExDH,mBAAA,CAAwC;EAAjCI,GAAG,EAAC;AAAO,GAAC,eAAa;gCAIhCJ,mBAAA,CAAoC;EAA7BI,GAAG,EAAC;AAAU,GAAC,QAAM;;qBAE1BC,UAAyD,C;iCAkB3DL,mBAAA,CAAkE;EAA3DI,GAAG,EAAC;AAAS,GAAC,uCAAqC;;;uBApClEE,mBAAA,CA2CO,eA1CLN,mBAAA,CAyCM,OAzCNO,UAyCM,GAxCJC,mBAAA,oBAAuB,EACvBR,mBAAA,CAsCM,OAtCNS,UAsCM,GArCJC,UAEM,EAENF,mBAAA,UAAa,EACbA,mBAAA,2IAA8I,EAC9IR,mBAAA,CA8BO,QA9BPW,UA8BO,GA7BLH,mBAAA,oBAAuB,EACvBI,UAAwC,E,gBACxCZ,mBAAA,CAA4H;IAArHa,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,cAAc;IAACC,EAAE,EAAC,cAAc;IAACC,WAAW,EAAC,eAAe;+DAAUC,MAAA,CAAAC,aAAa,CAACC,KAAK,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAArBJ,MAAA,CAAAC,aAAa,CAACC,KAAK,E,GAEjHX,mBAAA,uBAA0B,EAC1Bc,UAAoC,E,gBACpCtB,mBAAA,CAgBS;IAhBDc,IAAI,EAAC,iBAAiB;IAACC,EAAE,EAAC,eAAe;+DAAUE,MAAA,CAAAC,aAAa,CAACK,MAAM,GAAAH,MAAA;IAAEC,QAAQ,EAAR;+DAAtBJ,MAAA,CAAAC,aAAa,CAACK,MAAM,E,GAkB/Ef,mBAAA,4CAA+C,EAC/CgB,WAAkE,E,gBAClExB,mBAAA,CAAwJ;IAA9Ie,EAAE,EAAC,MAAM;IAACD,IAAI,EAAC,qBAAqB;IAACW,SAAS,EAAC,IAAI;IAACT,WAAW,EAAC,qBAAqB;+DAAUC,MAAA,CAAAC,aAAa,CAACQ,WAAW,GAAAN,MAAA;IAAEC,QAAQ,EAAR;iDAA3BJ,MAAA,CAAAC,aAAa,CAACQ,WAAW,E,GAElI1B,mBAAA,CAAqD;IAA9Ca,IAAI,EAAC,QAAQ;IAAEc,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEZ,MAAA,CAAAa,OAAA,IAAAb,MAAA,CAAAa,OAAA,IAAAD,IAAA,CAAO;IAAEE,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}