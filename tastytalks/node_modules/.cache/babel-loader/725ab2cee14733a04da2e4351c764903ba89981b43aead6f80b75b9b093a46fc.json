{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { db, auth } from '../firebase';\nexport default {\n  data() {\n    return {\n      recipes: [],\n      questions: [],\n      user: null\n    };\n  },\n  mounted() {\n    this.fetchUserData();\n    this.fetchRecipes();\n    this.fetchQuestions();\n  },\n  methods: {\n    //fetch users\n    async fetchUserData() {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        try {\n          //fetches user data from the user document, based on the authId\n          const userCollection = collection(db, 'users'); // Create a reference to the \"users\" collection\n          const userQuery = query(userCollection, where('authId', '==', currentUser.uid)); // Create a query to find the user document by authId\n          const userQuerySnapshot = await getDocs(userQuery); // Fetch the user document based on the query\n\n          if (!userQuerySnapshot.empty) {\n            // Check if there are any matching documents\n            const userData = userQuerySnapshot.docs[0].data(); // Assuming there is only one user document per authId\n            this.user = userData;\n            await this.fetchRecipes(); // start display of recipe section\n          } else {\n            console.log('User document not found.');\n          }\n        } catch (error) {\n          console.error('Error fetching user data: ', error);\n        }\n      } else {\n        console.log('User not authenticated.');\n      }\n    },\n    //fetch recipes\n    async fetchRecipes() {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        //check user exists\n        try {\n          const authId = currentUser.uid; // get the user's id (authId) \n          const recipesCollection = collection(db, 'recipes'); // reference to the recipes collection\n          const recipesQuery = query(recipesCollection, where('user', '==', authId)); //create a query to filter by the user field\n          const querySnapshot = await getDocs(recipesQuery); //fetch the recipes based on the query\n          console.log('Recipes:', querySnapshot.docs.map(doc => doc.data()));\n          this.recipes = querySnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n        } catch (error) {\n          console.log('Error fetching recipes: ', error);\n        }\n      } else {\n        console.log('User not authenticated.');\n      }\n    },\n    //fetch questions\n    async fetchQuestions() {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        //check user exists\n        try {\n          const authId = currentUser.uid; // get the user's id (authId) \n          const questionsCollection = collection(db, 'questions'); // reference to the recipes collection\n          const questionsQuery = query(questionsCollection, where('user', '==', authId)); //create a query to filter by the user field\n          const querySnapshot = await getDocs(questionsQuery); //fetch the recipes based on the query\n          console.log('Questions:', querySnapshot.docs.map(doc => doc.data()));\n          this.questions = querySnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n        } catch (error) {\n          console.log('Error fetching questions: ', error);\n        }\n      } else {\n        console.log('User not authenticated.');\n      }\n    },\n    goToSettings() {\n      this.$router.push('/settings');\n    }\n    // goToRecipe(recipeId){\n    //     this.$router.push({ name: 'Recipe', params: { id: recipeId } });\n    // },\n    // goToQuestion(questionId){\n    //   this.$router.push({ name: 'Question', params: { id: questionId}})\n    // },\n  }\n};\n\n// created() {\n//   this.fetchUserData();\n// },","map":{"version":3,"names":["collection","query","where","getDocs","db","auth","data","recipes","questions","user","mounted","fetchUserData","fetchRecipes","fetchQuestions","methods","currentUser","userCollection","userQuery","uid","userQuerySnapshot","empty","userData","docs","console","log","error","authId","recipesCollection","recipesQuery","querySnapshot","map","doc","id","questionsCollection","questionsQuery","goToSettings","$router","push"],"sources":["C:\\Users\\willa\\Documents\\GitHub\\ITSC-3155\\TastyTalks\\tastytalks\\src\\views\\ProfilePage.vue"],"sourcesContent":["<template>\r\n  <main>\r\n    <div class=\"profile-container\">\r\n      <div class=\"profile-card\">\r\n        <div class=\"profile-header\">\r\n          <h1>Your Profile</h1>\r\n          <i @click=\"goToSettings\" class=\"fa-solid fa-gear settings-icon\"></i>\r\n        </div>\r\n        <div class=\"profile-body\">\r\n          <div class=\"profile-info\"> <!-- user info display -->\r\n            <p><strong>Name: </strong> {{ user?.username || 'Loading...' }}</p>\r\n            <p><strong>Email: </strong> {{ user?.email || 'Loading...' }}</p>\r\n            <p><strong>Region: </strong>{{ user?.region || 'Loading...' }}</p>\r\n            <!-- Display more user information here -->\r\n          </div>\r\n          <div class=\"post-grid\"> <!-- Recipes display // add styling and postion on left side of page only--> \r\n            <h2>Recipes</h2>\r\n            <ul>\r\n              <li v-for=\"recipe in recipes\" :key=\"recipe.id\">\r\n                <strong>Title:</strong> {{ recipe.title || 'No Title' }} <br>\r\n                <!-- Display more recipe information here -->\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"post-grid\"> <!-- Questions display // add styling and postion on right side of page only--> \r\n            <h2>Questions</h2>\r\n            <ul>\r\n              <li v-for=\"question in questions\" :key=\"question.id\">\r\n                <strong>Title: </strong> {{ question.title }} <br>\r\n                <!-- Display more question information here -->\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n  \r\n\r\n<script>\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { db, auth } from '../firebase';\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      recipes: [],\r\n      questions: [],\r\n      user: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUserData()\r\n    this.fetchRecipes()\r\n    this.fetchQuestions()\r\n  },\r\n  methods: {\r\n\r\n    //fetch users\r\n    async fetchUserData() {\r\n      const currentUser = auth.currentUser;\r\n      \r\n        if (currentUser) {\r\n          try{\r\n            //fetches user data from the user document, based on the authId\r\n            const userCollection = collection(db, 'users');   // Create a reference to the \"users\" collection\r\n            const userQuery = query(userCollection, where('authId', '==', currentUser.uid));   // Create a query to find the user document by authId\r\n            const userQuerySnapshot = await getDocs(userQuery);   // Fetch the user document based on the query\r\n            \r\n            if (!userQuerySnapshot.empty) { // Check if there are any matching documents\r\n              const userData = userQuerySnapshot.docs[0].data();  // Assuming there is only one user document per authId\r\n              this.user = userData;\r\n              await this.fetchRecipes(); // start display of recipe section\r\n            } else {\r\n              console.log('User document not found.');\r\n            }\r\n\r\n            \r\n          } catch (error) {\r\n              console.error('Error fetching user data: ', error)\r\n          }\r\n        } else {\r\n          console.log('User not authenticated.')\r\n        } \r\n    },\r\n\r\n    //fetch recipes\r\n    async fetchRecipes() {\r\n\r\n      const currentUser = auth.currentUser;\r\n\r\n      if (currentUser) { //check user exists\r\n        try {\r\n          const authId = currentUser.uid;  // get the user's id (authId) \r\n          const recipesCollection = collection(db, 'recipes');  // reference to the recipes collection\r\n          const recipesQuery = query(recipesCollection, where('user', '==', authId));  //create a query to filter by the user field\r\n          const querySnapshot = await getDocs(recipesQuery)   //fetch the recipes based on the query\r\n          console.log('Recipes:', querySnapshot.docs.map((doc) => doc.data()));\r\n          this.recipes = querySnapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n\r\n        } catch (error) {\r\n          console.log('Error fetching recipes: ', error)\r\n        }\r\n      } else {\r\n        console.log('User not authenticated.')\r\n      }\r\n    },\r\n\r\n    //fetch questions\r\n    async fetchQuestions() {\r\n\r\n      const currentUser = auth.currentUser;\r\n\r\n      if (currentUser) { //check user exists\r\n        try {\r\n          const authId = currentUser.uid;  // get the user's id (authId) \r\n          const questionsCollection = collection(db, 'questions');  // reference to the recipes collection\r\n          const questionsQuery = query(questionsCollection, where('user', '==', authId));  //create a query to filter by the user field\r\n          const querySnapshot = await getDocs(questionsQuery)   //fetch the recipes based on the query\r\n          console.log('Questions:', querySnapshot.docs.map((doc) => doc.data()));\r\n          this.questions = querySnapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n\r\n        } catch (error) {\r\n          console.log('Error fetching questions: ', error)\r\n        }\r\n      } else {\r\n        console.log('User not authenticated.')\r\n      }\r\n    },\r\n    goToSettings() {\r\n        this.$router.push('/settings');\r\n    },\r\n    // goToRecipe(recipeId){\r\n    //     this.$router.push({ name: 'Recipe', params: { id: recipeId } });\r\n    // },\r\n    // goToQuestion(questionId){\r\n    //   this.$router.push({ name: 'Question', params: { id: questionId}})\r\n    // },\r\n  }\r\n}\r\n\r\n// created() {\r\n//   this.fetchUserData();\r\n// },\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.profile-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: calc(100vh - 160px);\r\n  /* Adjust based on your header and footer height */\r\n  padding: 20px;\r\n}\r\n\r\n.profile-card {\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 800px;\r\n  /* Increased width */\r\n  min-height: 800px;\r\n  margin: auto;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* Stack children vertically */\r\n}\r\n\r\n.profile-header {\r\n  background-color: #4c934c;\r\n  /* Similar green from your image */\r\n  color: #fff;\r\n  padding: 20px;\r\n  text-align: center;\r\n  position: relative;\r\n}\r\n\r\n.settings-icon {\r\n  position: absolute;\r\n  top: 23px;\r\n  /* Adjust as needed */\r\n  right: 20px;\r\n  /* Adjust as needed */\r\n  font-size: 32px;\r\n  /* Adjust as needed */\r\n  color: #fff;\r\n  /* Adjust as needed */\r\n  cursor: pointer;\r\n}\r\n\r\n.profile-body {\r\n  padding: 20px;\r\n  flex-grow: 1;\r\n  /* Makes the body take up all available space */\r\n}\r\n\r\n.profile-info p {\r\n  font-size: 16px;\r\n  color: #333;\r\n  line-height: 1.5;\r\n  margin-bottom: 30px;\r\n  /* Spacing between paragraphs */\r\n}\r\n\r\n.profile-info strong {\r\n  color: #4c934c;\r\n  /* Similar green for emphasis */\r\n}</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}