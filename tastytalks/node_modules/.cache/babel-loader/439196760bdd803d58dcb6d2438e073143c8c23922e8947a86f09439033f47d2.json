{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-54599c44\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"question-feed\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"centered-container\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"cylinder-heading\"\n}, \"Questions\")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"page-instructions\"\n}, \" Explore questions from the community. Click on a question to view details and participate in the discussion. \", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"filter-container\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"region\",\n  class: \"heading-stylized\"\n}, \"Filter Region:\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"\\\" data-v-54599c44>Select Region</option><option value=\\\"1\\\" data-v-54599c44>Asia-Pacific</option><option value=\\\"2\\\" data-v-54599c44>Caribbean</option><option value=\\\"3\\\" data-v-54599c44>Central America</option><option value=\\\"4\\\" data-v-54599c44>Central Asia</option><option value=\\\"5\\\" data-v-54599c44>Eastern Europe</option><option value=\\\"6\\\" data-v-54599c44>Middle East</option><option value=\\\"7\\\" data-v-54599c44>Nordic Countries</option><option value=\\\"8\\\" data-v-54599c44>North America</option><option value=\\\"9\\\" data-v-54599c44>Northern Africa</option><option value=\\\"10\\\" data-v-54599c44>Oceania</option><option value=\\\"11\\\" data-v-54599c44>Southern Africa</option><option value=\\\"12\\\" data-v-54599c44>South America</option><option value=\\\"13\\\" data-v-54599c44>Southeast Asia</option><option value=\\\"14\\\" data-v-54599c44>Western Europe</option>\", 15);\nconst _hoisted_21 = {\n  class: \"question-list\"\n};\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = {\n  class: \"question-content\"\n};\nconst _hoisted_24 = {\n  class: \"question-title\"\n};\nconst _hoisted_25 = {\n  class: \"region\"\n};\nconst _hoisted_26 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Region:\", -1 /* HOISTED */));\nconst _hoisted_27 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createCommentVNode(\" Filter Section \"), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Region Filter \"), _hoisted_5, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedRegion = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $setup.fetchQuestions && $setup.fetchQuestions(...args))\n  }, [_hoisted_6, _createCommentVNode(\" Add more options for other regions \")], 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelSelect, $setup.selectedRegion]])]), _createElementVNode(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.questions, question => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: question.id,\n      class: \"question-item\",\n      onClick: $event => $setup.goToQuestion(question.id)\n    }, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"h2\", _hoisted_24, _toDisplayString(question.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(question.body), 1 /* TEXT */), _createCommentVNode(\" Display region instead of tags \"), _createElementVNode(\"div\", _hoisted_25, [_hoisted_26, _createElementVNode(\"span\", null, _toDisplayString($setup.getRegionName(question.regionID)), 1 /* TEXT */)])])], 8 /* PROPS */, _hoisted_22);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_27])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4","_hoisted_5","$setup","selectedRegion","$event","onChange","_cache","args","fetchQuestions","_hoisted_6","_hoisted_21","_Fragment","_renderList","questions","question","key","id","onClick","goToQuestion","_hoisted_23","_hoisted_24","_toDisplayString","title","body","_hoisted_25","_hoisted_26","getRegionName","regionID","_hoisted_27"],"sources":["C:\\Users\\willa\\Documents\\GitHub\\ITSC-3155\\TastyTalks\\tastytalks\\src\\views\\QuestionFeed.vue"],"sourcesContent":["<!-- QuestionFeed.vue -->\r\n<template>\r\n    <main>\r\n      <div class=\"question-feed\">\r\n        <div class=\"centered-container\">\r\n          <h1 class=\"cylinder-heading\">Questions</h1>\r\n        </div>\r\n  \r\n        <p class=\"page-instructions\">\r\n          Explore questions from the community. Click on a question to view details and participate in the discussion.\r\n        </p>\r\n  \r\n        <!-- Filter Section -->\r\n        <div class=\"filter-container\">\r\n          <!-- Region Filter -->\r\n          <label for=\"region\" class=\"heading-stylized\">Filter Region:</label>\r\n          <select v-model=\"selectedRegion\" @change=\"fetchQuestions\">\r\n            <option value=\"\">Select Region</option>\r\n            <option value=\"1\">Asia-Pacific</option>\r\n            <option value=\"2\">Caribbean</option>\r\n            <option value=\"3\">Central America</option>\r\n            <option value=\"4\">Central Asia</option>\r\n            <option value=\"5\">Eastern Europe</option>\r\n            <option value=\"6\">Middle East</option>\r\n            <option value=\"7\">Nordic Countries</option>\r\n            <option value=\"8\">North America</option>\r\n            <option value=\"9\">Northern Africa</option>\r\n            <option value=\"10\">Oceania</option>\r\n            <option value=\"11\">Southern Africa</option>\r\n            <option value=\"12\">South America</option>\r\n            <option value=\"13\">Southeast Asia</option>\r\n            <option value=\"14\">Western Europe</option>\r\n            <!-- Add more options for other regions -->\r\n          </select>\r\n        </div>\r\n  \r\n        <div class=\"question-list\">\r\n          <div v-for=\"question in questions\" :key=\"question.id\" class=\"question-item\" @click=\"goToQuestion(question.id)\">\r\n            <div class=\"question-content\">\r\n              <h2 class=\"question-title\">{{ question.title }}</h2>\r\n              <p>{{ question.body }}</p>\r\n              <!-- Display region instead of tags -->\r\n              <div class=\"region\">\r\n                <strong>Region:</strong>\r\n                <span>{{ getRegionName(question.regionID) }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br>\r\n      </div>\r\n    </main>\r\n  </template>\r\n  \r\n  <script>\r\n  import { onMounted, ref } from 'vue';\r\n  import { collection, getDocs } from 'firebase/firestore';\r\n  import { db } from '../firebase';\r\n  import { useRouter } from 'vue-router';\r\n  \r\n  export default {\r\n    setup() {\r\n      const router = useRouter();\r\n      const questions = ref([]);\r\n      const selectedRegion = ref('');\r\n  \r\n      // Define a map to store region names based on IDs\r\n      const regionMap = {\r\n        1: 'Asia-Pacific',\r\n        2: 'Caribbean',\r\n        3: 'Central America',\r\n        4: 'Central Asia',\r\n        5: 'Eastern Europe',\r\n        6: 'Middle East',\r\n        7: 'Nordic Countries',\r\n        8: 'North America',\r\n        9: 'Northern Africa',\r\n        10: 'Oceania',\r\n        11: 'Southern Africa',\r\n        12: 'South America',\r\n        13: 'Southeast Asia',\r\n        14: 'Western Europe',\r\n        // Add more entries for other regions\r\n      };\r\n  \r\n      const getRegionName = (regionID) => {\r\n        return regionMap[regionID] || 'Unknown Region';\r\n      };\r\n  \r\n      const fetchQuestions = async () => {\r\n        const questionsCollection = collection(db, 'questions');\r\n        const querySnapshot = await getDocs(questionsCollection);\r\n  \r\n        const filteredQuestions = [];\r\n  \r\n        querySnapshot.forEach((doc) => {\r\n          const questionData = doc.data();\r\n  \r\n          // Check if the question matches the selected region\r\n          const matchesRegion = selectedRegion.value === '' || questionData.regionID === selectedRegion.value;\r\n  \r\n          if (matchesRegion) {\r\n            filteredQuestions.push({\r\n              id: doc.id,\r\n              ...questionData,\r\n            });\r\n          }\r\n        });\r\n  \r\n        questions.value = filteredQuestions;\r\n      };\r\n  \r\n      const goToQuestion = (questionId) => {\r\n        router.push({ name: 'Question', params: { id: questionId } });\r\n      };\r\n  \r\n      onMounted(() => {\r\n        fetchQuestions();\r\n      });\r\n  \r\n      return {\r\n        questions,\r\n        goToQuestion,\r\n        selectedRegion,\r\n        fetchQuestions,\r\n        getRegionName,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  \r\n  <style scoped>\r\n  .question-feed {\r\n    max-width: 80%; /* Set the maximum width to 80% of the viewport */\r\n    margin: 0 auto; /* Center the question feed horizontally */\r\n  }\r\n  \r\n  /* Your existing styles remain unchanged */\r\n  \r\n  .question-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n  \r\n  .question-item {\r\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    background-color: #bbc9f1;\r\n    transition: transform 0.3s ease-in-out;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .region {\r\n    margin-top: 10px;\r\n    font-size: 16px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EAGWA,KAAK,EAAC;AAAe;gEACxBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAoB,I,aAC7BC,mBAAA,CAA2C;EAAvCD,KAAK,EAAC;AAAkB,GAAC,WAAS,E;gEAGxCC,mBAAA,CAEI;EAFDD,KAAK,EAAC;AAAmB,GAAC,gHAE7B;;EAGKA,KAAK,EAAC;AAAkB;gEAE3BC,mBAAA,CAAmE;EAA5DC,GAAG,EAAC,QAAQ;EAACF,KAAK,EAAC;GAAmB,gBAAc;;;EAqBxDA,KAAK,EAAC;AAAe;;;EAEjBA,KAAK,EAAC;AAAkB;;EACvBA,KAAK,EAAC;AAAgB;;EAGrBA,KAAK,EAAC;AAAQ;iEACjBC,mBAAA,CAAwB,gBAAhB,SAAO;iEAMvBA,mBAAA,CAAI;;;uBA/CRE,mBAAA,CAiDO,eAhDLF,mBAAA,CA+CM,OA/CNG,UA+CM,GA9CJC,UAEM,EAENC,UAEI,EAEJC,mBAAA,oBAAuB,EACvBN,mBAAA,CAqBM,OArBNO,UAqBM,GApBJD,mBAAA,mBAAsB,EACtBE,UAAmE,E,gBACnER,mBAAA,CAiBS;+DAjBQS,MAAA,CAAAC,cAAc,GAAAC,MAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,MAAA,CAAAM,cAAA,IAAAN,MAAA,CAAAM,cAAA,IAAAD,IAAA,CAAc;MACtDE,UAAuC,EAevCV,mBAAA,wCAA2C,C,0DAhB5BG,MAAA,CAAAC,cAAc,E,KAoBjCV,mBAAA,CAYM,OAZNiB,WAYM,I,kBAXJf,mBAAA,CAUMgB,SAAA,QAAAC,WAAA,CAVkBV,MAAA,CAAAW,SAAS,EAArBC,QAAQ;yBAApBnB,mBAAA,CAUM;MAV8BoB,GAAG,EAAED,QAAQ,CAACE,EAAE;MAAExB,KAAK,EAAC,eAAe;MAAEyB,OAAK,EAAAb,MAAA,IAAEF,MAAA,CAAAgB,YAAY,CAACJ,QAAQ,CAACE,EAAE;QAC1GvB,mBAAA,CAQM,OARN0B,WAQM,GAPJ1B,mBAAA,CAAoD,MAApD2B,WAAoD,EAAAC,gBAAA,CAAtBP,QAAQ,CAACQ,KAAK,kBAC5C7B,mBAAA,CAA0B,WAAA4B,gBAAA,CAApBP,QAAQ,CAACS,IAAI,kBACnBxB,mBAAA,oCAAuC,EACvCN,mBAAA,CAGM,OAHN+B,WAGM,GAFJC,WAAwB,EACxBhC,mBAAA,CAAmD,cAAA4B,gBAAA,CAA1CnB,MAAA,CAAAwB,aAAa,CAACZ,QAAQ,CAACa,QAAQ,kB;oCAKhDC,WAAI,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}