{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-45ebcf8e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"profile-container\"\n};\nconst _hoisted_2 = {\n  class: \"profile-card\"\n};\nconst _hoisted_3 = {\n  class: \"profile-header\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Your Profile\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"profile-body\"\n};\nconst _hoisted_6 = {\n  class: \"profile-info\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Name: \", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Email: \", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Region: \", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  class: \"post-grid\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Recipes\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Title:\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_14 = {\n  class: \"post-grid\"\n};\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Questions\", -1 /* HOISTED */));\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Title: \", -1 /* HOISTED */));\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"i\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToSettings && $options.goToSettings(...args)),\n    class: \"fa-solid fa-gear settings-icon\"\n  })]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createCommentVNode(\" user info display \"), _createElementVNode(\"p\", null, [_hoisted_7, _createTextVNode(\" \" + _toDisplayString($data.user?.username || 'Loading...'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_8, _createTextVNode(\" \" + _toDisplayString($data.user?.email || 'Loading...'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_9, _createTextVNode(_toDisplayString($data.user?.region || 'Loading...'), 1 /* TEXT */)]), _createCommentVNode(\" Display more user information here \")]), _createElementVNode(\"div\", _hoisted_10, [_createCommentVNode(\" Recipes display // add styling and postion on left side of page only\"), _hoisted_11, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.recipes, recipe => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: recipe.id\n    }, [_hoisted_12, _createTextVNode(\" \" + _toDisplayString(recipe.title || 'No Title') + \" \", 1 /* TEXT */), _hoisted_13, _createCommentVNode(\" Display more recipe information here \")]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_14, [_createCommentVNode(\" Questions display // add styling and postion on right side of page only\"), _hoisted_15, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, question => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: question.id\n    }, [_hoisted_16, _createTextVNode(\" \" + _toDisplayString(question.title) + \" \", 1 /* TEXT */), _hoisted_17, _createCommentVNode(\" Display more question information here \")]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","$options","goToSettings","_hoisted_5","_hoisted_6","_createCommentVNode","_hoisted_7","_toDisplayString","$data","user","username","_hoisted_8","email","_hoisted_9","region","_hoisted_10","_hoisted_11","_Fragment","_renderList","recipes","recipe","key","id","_hoisted_12","title","_hoisted_13","_hoisted_14","_hoisted_15","questions","question","_hoisted_16","_hoisted_17"],"sources":["C:\\Users\\willa\\Documents\\GitHub\\ITSC-3155\\TastyTalks\\tastytalks\\src\\views\\ProfilePage.vue"],"sourcesContent":["<template>\r\n  <main>\r\n    <div class=\"profile-container\">\r\n      <div class=\"profile-card\">\r\n        <div class=\"profile-header\">\r\n          <h1>Your Profile</h1>\r\n          <i @click=\"goToSettings\" class=\"fa-solid fa-gear settings-icon\"></i>\r\n        </div>\r\n        <div class=\"profile-body\">\r\n          <div class=\"profile-info\"> <!-- user info display -->\r\n            <p><strong>Name: </strong> {{ user?.username || 'Loading...' }}</p>\r\n            <p><strong>Email: </strong> {{ user?.email || 'Loading...' }}</p>\r\n            <p><strong>Region: </strong>{{ user?.region || 'Loading...' }}</p>\r\n            <!-- Display more user information here -->\r\n          </div>\r\n          <div class=\"post-grid\"> <!-- Recipes display // add styling and postion on left side of page only--> \r\n            <h2>Recipes</h2>\r\n            <ul>\r\n              <li v-for=\"recipe in recipes\" :key=\"recipe.id\">\r\n                <strong>Title:</strong> {{ recipe.title || 'No Title' }} <br>\r\n                <!-- Display more recipe information here -->\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"post-grid\"> <!-- Questions display // add styling and postion on right side of page only--> \r\n            <h2>Questions</h2>\r\n            <ul>\r\n              <li v-for=\"question in questions\" :key=\"question.id\">\r\n                <strong>Title: </strong> {{ question.title }} <br>\r\n                <!-- Display more question information here -->\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n  \r\n\r\n<script>\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { db, auth } from '../firebase';\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      recipes: [],\r\n      questions: [],\r\n      user: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUserData()\r\n    this.fetchRecipes()\r\n    this.fetchQuestions()\r\n  },\r\n  methods: {\r\n\r\n    //fetch users\r\n    async fetchUserData() {\r\n      const currentUser = auth.currentUser;\r\n      \r\n        if (currentUser) {\r\n          try{\r\n            //fetches user data from the user document, based on the authId\r\n            const userCollection = collection(db, 'users');   // Create a reference to the \"users\" collection\r\n            const userQuery = query(userCollection, where('authId', '==', currentUser.uid));   // Create a query to find the user document by authId\r\n            const userQuerySnapshot = await getDocs(userQuery);   // Fetch the user document based on the query\r\n            \r\n            if (!userQuerySnapshot.empty) { // Check if there are any matching documents\r\n              const userData = userQuerySnapshot.docs[0].data();  // Assuming there is only one user document per authId\r\n              this.user = userData;\r\n              await this.fetchRecipes(); // start display of recipe section\r\n            } else {\r\n              console.log('User document not found.');\r\n            }\r\n\r\n            \r\n          } catch (error) {\r\n              console.error('Error fetching user data: ', error)\r\n          }\r\n        } else {\r\n          console.log('User not authenticated.')\r\n        } \r\n    },\r\n\r\n    //fetch recipes\r\n    async fetchRecipes() {\r\n\r\n      const currentUser = auth.currentUser;\r\n\r\n      if (currentUser) { //check user exists\r\n        try {\r\n          const authId = currentUser.uid;  // get the user's id (authId) \r\n          const recipesCollection = collection(db, 'recipes');  // reference to the recipes collection\r\n          const recipesQuery = query(recipesCollection, where('user', '==', authId));  //create a query to filter by the user field\r\n          const querySnapshot = await getDocs(recipesQuery)   //fetch the recipes based on the query\r\n          console.log('Recipes:', querySnapshot.docs.map((doc) => doc.data()));\r\n          this.recipes = querySnapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n\r\n        } catch (error) {\r\n          console.log('Error fetching recipes: ', error)\r\n        }\r\n      } else {\r\n        console.log('User not authenticated.')\r\n      }\r\n    },\r\n\r\n    //fetch questions\r\n    async fetchQuestions() {\r\n\r\n      const currentUser = auth.currentUser;\r\n\r\n      if (currentUser) { //check user exists\r\n        try {\r\n          const authId = currentUser.uid;  // get the user's id (authId) \r\n          const questionsCollection = collection(db, 'questions');  // reference to the recipes collection\r\n          const questionsQuery = query(questionsCollection, where('user', '==', authId));  //create a query to filter by the user field\r\n          const querySnapshot = await getDocs(questionsQuery)   //fetch the recipes based on the query\r\n          console.log('Questions:', querySnapshot.docs.map((doc) => doc.data()));\r\n          this.questions = querySnapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n\r\n        } catch (error) {\r\n          console.log('Error fetching questions: ', error)\r\n        }\r\n      } else {\r\n        console.log('User not authenticated.')\r\n      }\r\n    },\r\n    goToSettings() {\r\n        this.$router.push('/settings');\r\n    },\r\n    // goToRecipe(recipeId){\r\n    //     this.$router.push({ name: 'Recipe', params: { id: recipeId } });\r\n    // },\r\n    // goToQuestion(questionId){\r\n    //   this.$router.push({ name: 'Question', params: { id: questionId}})\r\n    // },\r\n  }\r\n}\r\n\r\n// created() {\r\n//   this.fetchUserData();\r\n// },\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.profile-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: calc(100vh - 160px);\r\n  /* Adjust based on your header and footer height */\r\n  padding: 20px;\r\n}\r\n\r\n.profile-card {\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 800px;\r\n  /* Increased width */\r\n  min-height: 800px;\r\n  margin: auto;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* Stack children vertically */\r\n}\r\n\r\n.profile-header {\r\n  background-color: #4c934c;\r\n  /* Similar green from your image */\r\n  color: #fff;\r\n  padding: 20px;\r\n  text-align: center;\r\n  position: relative;\r\n}\r\n\r\n.settings-icon {\r\n  position: absolute;\r\n  top: 23px;\r\n  /* Adjust as needed */\r\n  right: 20px;\r\n  /* Adjust as needed */\r\n  font-size: 32px;\r\n  /* Adjust as needed */\r\n  color: #fff;\r\n  /* Adjust as needed */\r\n  cursor: pointer;\r\n}\r\n\r\n.profile-body {\r\n  padding: 20px;\r\n  flex-grow: 1;\r\n  /* Makes the body take up all available space */\r\n}\r\n\r\n.profile-info p {\r\n  font-size: 16px;\r\n  color: #333;\r\n  line-height: 1.5;\r\n  margin-bottom: 30px;\r\n  /* Spacing between paragraphs */\r\n}\r\n\r\n.profile-info strong {\r\n  color: #4c934c;\r\n  /* Similar green for emphasis */\r\n}</style>"],"mappings":";;;EAESA,KAAK,EAAC;AAAmB;;EACvBA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAqB,YAAjB,cAAY;;EAGbD,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAc;gEACpBC,mBAAA,CAAuB,gBAAf,QAAM;gEACdA,mBAAA,CAAwB,gBAAhB,SAAO;gEACfA,mBAAA,CAAyB,gBAAjB,UAAQ;;EAGhBD,KAAK,EAAC;AAAW;iEACpBC,mBAAA,CAAgB,YAAZ,SAAO;iEAGPA,mBAAA,CAAuB,gBAAf,QAAM;iEAA2CA,mBAAA,CAAI;;EAK9DD,KAAK,EAAC;AAAW;iEACpBC,mBAAA,CAAkB,YAAd,WAAS;iEAGTA,mBAAA,CAAwB,gBAAhB,SAAO;iEAA+BA,mBAAA,CAAI;;;uBA3BhEC,mBAAA,CAmCO,eAlCLD,mBAAA,CAiCM,OAjCNE,UAiCM,GAhCJF,mBAAA,CA+BM,OA/BNG,UA+BM,GA9BJH,mBAAA,CAGM,OAHNI,UAGM,GAFJC,UAAqB,EACrBL,mBAAA,CAAoE;IAAhEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAET,KAAK,EAAC;QAEjCC,mBAAA,CAyBM,OAzBNW,UAyBM,GAxBJX,mBAAA,CAKM,OALNY,UAKM,GALqBC,mBAAA,uBAA0B,EACnDb,mBAAA,CAAmE,YAAhEc,UAAuB,E,iBAAA,GAAC,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,IAAI,EAAEC,QAAQ,iC,GAC5ClB,mBAAA,CAAiE,YAA9DmB,UAAwB,E,iBAAA,GAAC,GAAAJ,gBAAA,CAAGC,KAAA,CAAAC,IAAI,EAAEG,KAAK,iC,GAC1CpB,mBAAA,CAAkE,YAA/DqB,UAAyB,E,kCAAGL,KAAA,CAAAC,IAAI,EAAEK,MAAM,iC,GAC3CT,mBAAA,wCAA2C,C,GAE7Cb,mBAAA,CAQM,OARNuB,WAQM,GARkBV,mBAAA,yEAA4E,EAClGW,WAAgB,EAChBxB,mBAAA,CAKK,c,kBAJHC,mBAAA,CAGKwB,SAAA,QAAAC,WAAA,CAHgBV,KAAA,CAAAW,OAAO,EAAjBC,MAAM;yBAAjB3B,mBAAA,CAGK;MAH0B4B,GAAG,EAAED,MAAM,CAACE;QACzCC,WAAuB,E,iBAAA,GAAC,GAAAhB,gBAAA,CAAGa,MAAM,CAACI,KAAK,kBAAiB,GAAC,iBAAAC,WAAI,EAC7DpB,mBAAA,0CAA6C,C;sCAInDb,mBAAA,CAQM,OARNkC,WAQM,GARkBrB,mBAAA,4EAA+E,EACrGsB,WAAkB,EAClBnC,mBAAA,CAKK,c,kBAJHC,mBAAA,CAGKwB,SAAA,QAAAC,WAAA,CAHkBV,KAAA,CAAAoB,SAAS,EAArBC,QAAQ;yBAAnBpC,mBAAA,CAGK;MAH8B4B,GAAG,EAAEQ,QAAQ,CAACP;QAC/CQ,WAAwB,E,iBAAA,GAAC,GAAAvB,gBAAA,CAAGsB,QAAQ,CAACL,KAAK,IAAG,GAAC,iBAAAO,WAAI,EAClD1B,mBAAA,4CAA+C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}